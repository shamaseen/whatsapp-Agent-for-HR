{
  "nodes": [
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1P2aT3zRRpPhBPDYO-nT0NOUidqMf7lTj",
            "mode": "list",
            "cachedResultName": "cv files",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1P2aT3zRRpPhBPDYO-nT0NOUidqMf7lTj"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1328,
        -544
      ],
      "id": "62918814-971a-4d5e-9b9f-1a2786f97510",
      "name": "Search files and folders",
      "executeOnce": false,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "abDofkLPzrHk7hcZ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "id": "db1c06c4-78df-4db5-b8fc-c4e1607b8a7d",
      "name": "Loop Over Files1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -720,
        -608
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analyze this CV and extract the following information in JSON format:\n\n{\n\"file Name\":\"file name\",\n  \"name\": \"full name\",\n  \"email\": \"email address\",\n  \"phone\": \"phone number (replace + with 00 and return only digits\",\n  \"skills\": \"comma-separated skills\",\n  \"experienceYears\": \"number of years\",\n  \"education\": \"highest education\",\n  \"jobTitles\": \"previous job titles comma-separated\",\n  \"summary\": \"brief 2-3 sentence summary\"\n}\nfile name \n:{{ $('Loop Over Files1').item.json.name }}\nCV Text:\n{{ $json.text }}\n\nRespond with ONLY the JSON object, no other text.\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Analyze the CV and extract the following information. Respond with ONLY a valid JSON object:"
        }
      },
      "id": "75136941-14b0-4a95-bdae-c1ba669daa62",
      "name": "AI Agent - Summarize CV1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1040,
        -720
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1024,
        -480
      ],
      "id": "f9325eb4-9316-4c46-b6f8-cf1330976255",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "PQxhK8XM9oSjddYd",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "7401e215-b43e-49d4-a067-7dd5abb09a96",
      "name": "Extract PDF Text1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        768,
        -560
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\"file Name\":\"file name\",\n  \"name\": \"full name\",\n  \"email\": \"email address\",\n  \"phone\": \"phone number\",\n  \"skills\": \"comma-separated skills\",\n  \"experienceYears\": \"number of years\",\n  \"education\": \"highest education\",\n  \"jobTitles\": \"previous job titles comma-separated\",\n  \"summary\": \"brief 2-3 sentence summary\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1200,
        -560
      ],
      "id": "191e6891-7918-4c51-bea7-cf8384fcc0c9",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "={{ $('Webhook process cv').item.json.query.sheet_id }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "fileName",
              "displayName": "fileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "education",
              "displayName": "education",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "jobTitles",
              "displayName": "jobTitles",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "skills",
              "displayName": "skills",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "experienceYears",
              "displayName": "experienceYears",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "8a81ed13-af59-42e3-8b74-ca3e9337c9ab",
      "name": "Save to Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        2048,
        -464
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kHKwo99vi5iEgNsC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0982d025-9dda-4e33-8c7f-43080052378e",
              "name": "fileName",
              "value": "={{ $json.output.fileName || $json.output[\"file Name\"]}}",
              "type": "string"
            },
            {
              "id": "e1735caf-b9aa-4a01-a47c-c322c006ee76",
              "name": "name",
              "value": "={{ $json.output.name }}",
              "type": "string"
            },
            {
              "id": "26e86fdc-effa-45a1-9902-4025380c0818",
              "name": "education",
              "value": "={{ $json.output.education }}",
              "type": "string"
            },
            {
              "id": "c2d267ee-862c-4789-acff-8a0d3b095d68",
              "name": "jobTitles",
              "value": "={{ $json.output.jobTitles }}",
              "type": "string"
            },
            {
              "id": "cfffa3e8-1d71-421b-8192-01a16a61cc1d",
              "name": "skills",
              "value": "={{ $json.output.skills }}",
              "type": "string"
            },
            {
              "id": "5d4f74bd-f8c2-4199-9efa-5e1515169a7f",
              "name": "experienceYears",
              "value": "={{ $json.output.experienceYears }}",
              "type": "string"
            },
            {
              "id": "2ff5060f-917c-436c-b5ca-16a17023f50d",
              "name": "email",
              "value": "={{ $json.output.email }}",
              "type": "string"
            },
            {
              "id": "94833454-7cca-458e-8c0f-e072ff3b766d",
              "name": "phone",
              "value": "={{ $json.output.phone }}",
              "type": "string"
            },
            {
              "id": "700ae75b-4fed-47ad-abfa-32d469c6cedf",
              "name": "summary",
              "value": "={{ $json.output.summary }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1648,
        -592
      ],
      "id": "da96453b-5a97-440b-ba34-188affcfd7a3",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "929c88b3-3eaf-47a4-9c60-005e80e309fa",
              "name": "sheet_id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -752,
        -992
      ],
      "id": "a1942f53-b6db-4854-b9b1-95f4cd8c9972",
      "name": "rename sheet variable"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "queryString": "={{ $json.body.sheet_name }}",
        "returnAll": true,
        "filter": {
          "driveId": {
            "mode": "list",
            "value": "My Drive"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1664,
        -976
      ],
      "id": "8f9c7f35-f065-4586-916b-2c17ba0e7d7e",
      "name": "Search files and folders1",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "executeOnce": false,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "abDofkLPzrHk7hcZ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "66d2cd3c-b54b-4657-a718-c8fc176f8973",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1440,
        -1024
      ],
      "id": "b2ef12e1-e24c-46f5-808d-86b91662c902",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "queryString": "={{ $('Webhook').item.json.body.sheet_name }}",
        "returnAll": true,
        "filter": {},
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1120,
        -976
      ],
      "id": "a5990df7-c09e-453d-b483-6eac8d066f35",
      "name": "Search files and folders2",
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "abDofkLPzrHk7hcZ",
          "name": "Google Drive account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.spreadsheetId }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1S6ueaa_kHGBc41I--Ase8LhbZBDl0Byo",
          "mode": "list",
          "cachedResultName": "CV Screening & Interview Scheduler with Loops",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1S6ueaa_kHGBc41I--Ase8LhbZBDl0Byo"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1120,
        -1184
      ],
      "id": "f250a58d-3ca2-4883-a5b2-ad8994b24892",
      "name": "Move file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "abDofkLPzrHk7hcZ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "resource": "spreadsheet",
        "title": "={{ $('Webhook').item.json.body.sheet_name }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -1248,
        -1184
      ],
      "id": "6fc9b5f3-5b5f-4067-bae8-1887dbf3efab",
      "name": "Create spreadsheet",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kHKwo99vi5iEgNsC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Create or Find Sheet\n1. Search for the Google Sheet by name.\n2. If it exists:\n   - Return its `sheet_id`.\n3. If it does **not** exist:\n   - Create a new sheet.\n   - Return its `sheet_id`.\n4. Pass the `sheet_id` downstream (e.g. store it in a variable) so later nodes (e.g. “Save to Google Sheets”) can use it for writing.\n",
        "height": 352,
        "width": 278
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1744,
        -1424
      ],
      "typeVersion": 1,
      "id": "3d388632-fdc8-4e73-9e05-65a219431528",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "Done",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1488,
        -912
      ],
      "id": "5ab0551d-e65c-4617-ab29-66cf497b8e47",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "path": "e99a90c4-0696-46da-b729-92596d37a6c2",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -2032,
        -624
      ],
      "id": "3743a9dc-899a-4048-a411-964b22c743ef",
      "name": "Webhook process cv",
      "webhookId": "e99a90c4-0696-46da-b729-92596d37a6c2"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Loop Over Files1').item.json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        560,
        -544
      ],
      "id": "d0405702-b166-4e9d-ba5d-dc7c07292abc",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "abDofkLPzrHk7hcZ",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "={{ $('Webhook process cv').item.json.query.sheet_id }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UrdNCwSKQ5oamuvBk_rZHCtOHkqmR7y42OUghlFPieM/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "fileName",
              "lookupValue": "={{ $json.fileName }}"
            }
          ]
        },
        "combineFilters": "AND",
        "options": {}
      },
      "id": "00c5a3af-3840-4c72-890b-1c8e14c6fe70",
      "name": "Read All Candidates1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        272,
        -512
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kHKwo99vi5iEgNsC",
          "name": "Google Sheets account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "={{ $('Webhook process cv').item.json.query.sheet_id }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UrdNCwSKQ5oamuvBk_rZHCtOHkqmR7y42OUghlFPieM/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "fileName",
              "lookupValue": "={{ $json.name }}"
            }
          ]
        },
        "combineFilters": "AND",
        "options": {}
      },
      "id": "a250056e-147f-44fc-91c2-8e7acfd77b8f",
      "name": "Read All Candidates2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        -240,
        -496
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kHKwo99vi5iEgNsC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bb7cf0bc-b2a6-4689-b9d1-14fa55bbaf08",
              "leftValue": "={{$json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        64,
        -608
      ],
      "id": "859cc0e7-ec36-4862-8394-f02d80f96d2a",
      "name": "If1"
    },
    {
      "parameters": {
        "content": "## Check if the file is empty. If yes, process the first CV. If not, check if the file name exists in the sheet. If it does, continue the loop; otherwise, process the file.",
        "height": 80,
        "width": 880
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -464,
        -272
      ],
      "typeVersion": 1,
      "id": "7468ba5b-d5df-401e-98a9-d250ddb2cec2",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "path": "search-candidates",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "7fdc1bc2-e0ea-4fca-a510-66918f94be6a",
      "name": "Webhook - Search Candidates",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1568,
        128
      ],
      "webhookId": "search-candidates"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "={{ $json.query.sheet_id }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "options": {}
      },
      "id": "ef88314e-6530-4c1b-a231-074d8060baec",
      "name": "Read All Candidates",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        -1200,
        128
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kHKwo99vi5iEgNsC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "prompt": "=Job Title: {{ $('Webhook - Search Candidates').item.json.query['Job position'] }}\n\nAll Candidates:\n\n{{ $json.data.toJsonString() }}\nRank the TOP 20 candidates for this position based on:\n1. Relevant skills match\n2. Years of experience\n3. Previous job titles relevance\n4. Education background\n\nReturn a JSON array with exactly 5 candidates:\n[\n  {\n    \"rank\": 1,\n    \"name\": \"candidate name\",\n    \"email\": \"email\",\n    \"phone\": \"phone\",\n    \"matchScore\": 95,\n    \"reason\": \"brief reason for ranking\"\n  }\n]\n\nRespond with ONLY the JSON array, no other text.\n\nCandidates:\n"
      },
      "id": "112b38a3-fe51-49c5-9f76-03ff09eed3ed",
      "name": "AI - Rank Candidates",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1,
      "position": [
        -800,
        128
      ]
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "match_score",
              "order": "descending"
            }
          ]
        },
        "options": {}
      },
      "id": "f4499648-a498-4811-835c-c92efd3daaa5",
      "name": "Sort by Match Score",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        -176,
        128
      ]
    },
    {
      "parameters": {
        "maxItems": "=10"
      },
      "id": "7eb74f3f-be95-4e47-b386-7b325adebb7e",
      "name": "Limit to Top N",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        16,
        128
      ],
      "disabled": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Limit to Top N').all().map(item => item.json) }}",
        "options": {}
      },
      "id": "6fa8ab03-0db0-4634-8094-ac47b7deb849",
      "name": "Return Search Results",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        240,
        128
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -800,
        304
      ],
      "id": "882b9bc2-d60f-443e-8fea-2dcb51f7584b",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "PQxhK8XM9oSjddYd",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const aiResponse = $input.item.json.output || $input.item.json.text;\n\nlet candidates;\ntry {\n  // Try to parse direct JSON\n  candidates = JSON.parse(aiResponse);\n} catch (e) {\n  // Extract JSON from markdown code blocks or mixed content\n  const jsonMatch = aiResponse.match(/```(?:json)?\\s*([\\s\\S]*?)```/) || \n                    aiResponse.match(/\\[\\s*{[\\s\\S]*}\\s*\\]/);\n  \n  if (jsonMatch) {\n    candidates = JSON.parse(jsonMatch[1] || jsonMatch[0]);\n  } else {\n    throw new Error('Unable to parse AI response as JSON');\n  }\n}\n\n// Validate and normalize structure\nif (!Array.isArray(candidates)) {\n  candidates = [candidates];\n}\n\n// Normalize each candidate object\nconst normalizedCandidates = candidates.map(c => ({\n  candidate_name: c.candidate_name || c.name || c.candidateName || '',\n  email: c.email || '',\n  phone: c.phone || '',\n  match_score: parseInt(c.match_score || c.matchScore || c.score || 0),\n  reasoning: c.reasoning || c.reason || '',\n}));\n\n// Filter out candidates below threshold and sort by score\nconst filteredCandidates = normalizedCandidates\n  .filter(c => c.match_score >= 40)\n  .sort((a, b) => b.match_score - a.match_score);\n\nreturn filteredCandidates.map(candidate => ({ json: candidate }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        128
      ],
      "id": "b3c259bd-58c8-4ee4-90d0-f936f909abfd",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -1008,
        128
      ],
      "id": "7b59dff8-e66d-4951-b4cb-c84b3ee3fca0",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "path": "7a1acee6-783d-40ab-aca3-993dc7aaa37d"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 2,
      "position": [
        -1040,
        592
      ],
      "id": "6e50573e-8b9a-431a-abf2-d55ef077c74a",
      "name": "Gmail MCP Server",
      "webhookId": "7a1acee6-783d-40ab-aca3-993dc7aaa37d"
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1040,
        768
      ],
      "id": "4848469e-72e2-446b-935e-92811ae49af5",
      "name": "Send a message in Gmail",
      "webhookId": "299556f6-8bab-406c-b47f-fc76af99ec3a",
      "credentials": {
        "gmailOAuth2": {
          "id": "q6tfdX0aDvBWCoV4",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -784,
        768
      ],
      "id": "5ba2cbb3-b6bf-4ed0-83ee-bd2150cdfdaf",
      "name": "Reply to a message in Gmail",
      "webhookId": "c3fe4247-8b01-4df8-824c-fb571e05bc9a",
      "credentials": {
        "gmailOAuth2": {
          "id": "q6tfdX0aDvBWCoV4",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "path": "93706721-21c6-48cd-afcd-0ee66feeea30"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 2,
      "position": [
        -352,
        560
      ],
      "id": "bca7b878-39e3-42b3-ab5f-23bac558751e",
      "name": "Webex MCP Server",
      "webhookId": "93706721-21c6-48cd-afcd-0ee66feeea30"
    },
    {
      "parameters": {
        "resource": "meeting",
        "operation": "delete",
        "meetingId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Meeting_ID', ``, 'string') }}",
        "options": {
          "sendEmail": true
        }
      },
      "type": "n8n-nodes-base.ciscoWebexTool",
      "typeVersion": 1,
      "position": [
        -320,
        848
      ],
      "id": "bbd13d68-18d1-48c6-8a52-7a70b80bfd83",
      "name": "Delete a meeting in Webex by Cisco",
      "credentials": {
        "ciscoWebexOAuth2Api": {
          "id": "mi3vB4uEFbQsRDDD",
          "name": "Cisco Webex account"
        }
      }
    },
    {
      "parameters": {
        "resource": "meeting",
        "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}",
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.ciscoWebexTool",
      "typeVersion": 1,
      "position": [
        32,
        768
      ],
      "id": "3c84e517-58a5-4947-9819-493ec30c2d53",
      "name": "Create a meeting in Webex by Cisco",
      "credentials": {
        "ciscoWebexOAuth2Api": {
          "id": "mi3vB4uEFbQsRDDD",
          "name": "Cisco Webex account"
        }
      }
    },
    {
      "parameters": {
        "resource": "meeting",
        "operation": "update",
        "meetingId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Meeting_ID', ``, 'string') }}",
        "updateFields": {
          "sendEmail": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Send_Email', ``, 'boolean') }}"
        }
      },
      "type": "n8n-nodes-base.ciscoWebexTool",
      "typeVersion": 1,
      "position": [
        -176,
        832
      ],
      "id": "73de4a3d-2d85-4cee-af14-466f8b603cd8",
      "name": "Update a meeting in Webex by Cisco",
      "credentials": {
        "ciscoWebexOAuth2Api": {
          "id": "mi3vB4uEFbQsRDDD",
          "name": "Cisco Webex account"
        }
      }
    },
    {
      "parameters": {
        "resource": "meeting",
        "operation": "getAll",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "filters": {}
      },
      "type": "n8n-nodes-base.ciscoWebexTool",
      "typeVersion": 1,
      "position": [
        -512,
        800
      ],
      "id": "1a311f5b-a0cd-4b98-9a13-17989534763e",
      "name": "Get many meetings in Webex by Cisco",
      "credentials": {
        "ciscoWebexOAuth2Api": {
          "id": "mi3vB4uEFbQsRDDD",
          "name": "Cisco Webex account"
        }
      }
    },
    {
      "parameters": {
        "path": "c360a222-7ce6-4473-a566-c55570a60498"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 2,
      "position": [
        -1648,
        576
      ],
      "id": "ee144067-70cd-4e81-8c4c-84ba2283a9bc",
      "name": "calendar MCP Server",
      "webhookId": "c360a222-7ce6-4473-a566-c55570a60498"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "shamaseen997@gmail.com",
          "mode": "list",
          "cachedResultName": "shamaseen997@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1744,
        768
      ],
      "id": "ddcc134b-3439-4a95-aa2f-8cc2ec84a4d8",
      "name": "Create an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "JB4uFQdQjtth3hrk",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "shamaseen997@gmail.com",
          "mode": "list",
          "cachedResultName": "shamaseen997@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1616,
        784
      ],
      "id": "a2c78781-0e99-417e-952e-152987fa6cf4",
      "name": "Delete an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "JB4uFQdQjtth3hrk",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "shamaseen997@gmail.com",
          "mode": "list",
          "cachedResultName": "shamaseen997@gmail.com"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {
          "showDeleted": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Show_Deleted', ``, 'boolean') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1456,
        768
      ],
      "id": "191f8883-2ab9-42ea-bf14-1f78960099fa",
      "name": "Get many events in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "JB4uFQdQjtth3hrk",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "shamaseen997@gmail.com",
          "mode": "list",
          "cachedResultName": "shamaseen997@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1328,
        752
      ],
      "id": "d40f7060-cbb2-4197-9302-e2de2c61bc88",
      "name": "Update an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "JB4uFQdQjtth3hrk",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "content": "##  webex \n🛠 Steps you can try right now\n\nHere’s a checklist to resolve it:\n\nReview / limit scopes\n\nChange your OAuth credentials in the meeting service dev console, ensure only valid scopes are enabled.\n\nIn n8n, only request those scopes (don’t add extra ones).\n\nSet correct callback / redirect URI\n\nIn your meeting service’s app settings, set the redirect URI exactly to https://your‑n8n-domain.com/rest/oauth2-credential/callback\n\nMake sure the protocol (https / http), subdomain, path, and trailing slash match exactly.\n\nSet WEBHOOK_URL in n8n\n\nFor self‑hosted n8n, in your environment or docker config, set something like:\n\nWEBHOOK_URL=https://your‑n8n-domain.com/\n\n\nRestart n8n after that.\n\nTest in incognito / fresh session\n\nClear cache / cookies, then try the OAuth flow again to ensure there’s no stale state.\n\nUpgrade n8n / check for patches\n\nIf you’re on an older version, upgrade to the latest stable; there have been fixes to OAuth2 issues.\n\nAlso check n8n’s GitHub issues to see if your specific meeting integration has known OAuth bugs.\n\nCheck logs\n\nLook at n8n logs (server console) when the callback fails. There may be more detailed error messages.",
        "height": 960,
        "width": 528
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        320,
        576
      ],
      "typeVersion": 1,
      "id": "93b60dcb-9463-400a-a643-bf25a6b434fc",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "operation": "getAll",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "simple": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Simplify', ``, 'boolean') }}",
        "filters": {
          "q": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Search', ``, 'string') }}",
          "sender": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Sender', ``, 'string') }}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -912,
        768
      ],
      "id": "48795ccd-4082-424b-a74a-d59a5dbd5a24",
      "name": "Get many messages in Gmail",
      "webhookId": "77eef55b-03e2-4241-96df-ea83a4829b10",
      "credentials": {
        "gmailOAuth2": {
          "id": "q6tfdX0aDvBWCoV4",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "\nWITH cte AS (\n  SELECT session_id\n  FROM \"cv_screening_and_nterview_scheduler\"\n  GROUP BY session_id\n  HAVING COUNT(*) > 5000\n)\nDELETE FROM \"cv_screening_and_nterview_scheduler\"\nWHERE session_id IN (SELECT session_id FROM cte)\nAND ctid IN (\n  SELECT ctid\n  FROM \"cv_screening_and_nterview_scheduler\"\n  WHERE session_id IN (SELECT session_id FROM cte)\n  ORDER BY ctid\n  LIMIT (SELECT COUNT(*) - 5000 FROM \"cv_screening_and_nterview_scheduler\" WHERE session_id IN (SELECT session_id FROM cte))\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1536,
        1120
      ],
      "id": "05101ebe-bdbd-42ab-b0ab-d811fd0a6314",
      "name": "Execute a SQL query",
      "notesInFlow": true,
      "credentials": {
        "postgres": {
          "id": "1kC6jXErsPmU2i0A",
          "name": "Postgres account"
        }
      },
      "notes": "This process ensures that each session_id in the CV_Screening_and_nterview_Scheduler table maintains a maximum of 5,000 rows. Once a session_id exceeds this limit, the oldest records are automatically deleted to maintain optimal database performance."
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1744,
        1120
      ],
      "id": "d03696a8-c14c-498c-b87a-6e012a568c24",
      "name": "Auto clean Postgres Chat Memory"
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Document', ``, 'string') }}"
        },
        "sheetName": {
          "__rl": true,
          "value": "=Sheet1",
          "mode": "name"
        },
        "keepFirstRow": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Keep_First_Row', ``, 'boolean') }}"
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        -832,
        1328
      ],
      "id": "9a6755a5-df46-4bb2-9fe8-882cb87e6168",
      "name": "Clear sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kHKwo99vi5iEgNsC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Document', ``, 'string') }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "=Sheet1",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        -624,
        1328
      ],
      "id": "ac7caba3-3743-4381-b737-99f4d9603530",
      "name": "Get row(s) in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kHKwo99vi5iEgNsC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "path": "98f286ad-9135-4b1d-9147-d23942408d15",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -2048,
        -976
      ],
      "id": "2e7fb6fc-d665-4dd6-b2bb-ace45603a38e",
      "name": "Webhook",
      "webhookId": "98f286ad-9135-4b1d-9147-d23942408d15",
      "notesInFlow": true,
      "notes": "search for sheet and create it if not found"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"sheet_id\": \"{{ $json.sheet_id }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -544,
        -992
      ],
      "id": "56223f5e-5609-4bc7-9e61-0136fb7cb1fc",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "path": "9e10ec8f-da2e-47c3-bc94-f65f451245f6"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 2,
      "position": [
        -800,
        1136
      ],
      "id": "20d3fed6-c3d4-459a-90d4-f6870b7598b9",
      "name": "CV sheet manager MCP Server",
      "webhookId": "9e10ec8f-da2e-47c3-bc94-f65f451245f6"
    },
    {
      "parameters": {
        "path": "ae76bcd5-f848-4ad1-9cb1-cfda18d738c1"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 2,
      "position": [
        -160,
        1136
      ],
      "id": "2f58cc29-7cf3-4713-a662-89ef59920563",
      "name": "MCP thinking",
      "webhookId": "ae76bcd5-f848-4ad1-9cb1-cfda18d738c1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -112,
        1312
      ],
      "id": "f6276ae3-c981-45d6-8eb6-bb05e445275c",
      "name": "Sequential Thinking list_tools",
      "credentials": {
        "mcpClientApi": {
          "id": "JxUMqHWfTRsSpGUE",
          "name": "server-sequential-thinking"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "={{ $fromAI('Sequential_Thinking_list_tools','','string') }}",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', ``, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        64,
        1328
      ],
      "id": "6470efc9-dc9c-46c6-9fda-9da9f403ade8",
      "name": "Sequential Thinking execute_tool",
      "credentials": {
        "mcpClientApi": {
          "id": "JxUMqHWfTRsSpGUE",
          "name": "server-sequential-thinking"
        }
      }
    }
  ],
  "connections": {
    "Search files and folders": {
      "main": [
        [
          {
            "node": "Loop Over Files1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Files1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Read All Candidates2",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "AI Agent - Summarize CV1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent - Summarize CV1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text1": {
      "main": [
        [
          {
            "node": "AI Agent - Summarize CV1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent - Summarize CV1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Save to Google Sheets1": {
      "main": [
        [
          {
            "node": "Loop Over Files1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Save to Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "rename sheet variable": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search files and folders1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create spreadsheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Search files and folders2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search files and folders2": {
      "main": [
        [
          {
            "node": "rename sheet variable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move file": {
      "main": [
        [
          {
            "node": "Search files and folders2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create spreadsheet": {
      "main": [
        [
          {
            "node": "Move file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    },
    "Webhook process cv": {
      "main": [
        [
          {
            "node": "Search files and folders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Extract PDF Text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read All Candidates1": {
      "main": [
        [
          {
            "node": "Loop Over Files1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read All Candidates2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Read All Candidates1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - Search Candidates": {
      "main": [
        [
          {
            "node": "Read All Candidates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read All Candidates": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI - Rank Candidates": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort by Match Score": {
      "main": [
        [
          {
            "node": "Limit to Top N",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit to Top N": {
      "main": [
        [
          {
            "node": "Return Search Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI - Rank Candidates",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Sort by Match Score",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "AI - Rank Candidates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Gmail MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reply to a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Gmail MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete a meeting in Webex by Cisco": {
      "ai_tool": [
        [
          {
            "node": "Webex MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a meeting in Webex by Cisco": {
      "ai_tool": [
        [
          {
            "node": "Webex MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update a meeting in Webex by Cisco": {
      "ai_tool": [
        [
          {
            "node": "Webex MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many meetings in Webex by Cisco": {
      "ai_tool": [
        [
          {
            "node": "Webex MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "calendar MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "calendar MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many events in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "calendar MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "calendar MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many messages in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Gmail MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Auto clean Postgres Chat Memory": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clear sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "CV sheet manager MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "CV sheet manager MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Search files and folders1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sequential Thinking list_tools": {
      "ai_tool": [
        [
          {
            "node": "MCP thinking",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Sequential Thinking execute_tool": {
      "ai_tool": [
        [
          {
            "node": "MCP thinking",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "Webhook process cv": [
      {
        "headers": {
          "host": "n8n.hamzashamaseen.dpdns.org",
          "user-agent": "axios/1.12.0",
          "content-length": "0",
          "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
          "accept-encoding": "gzip, br",
          "cdn-loop": "cloudflare; loops=1",
          "cf-connecting-ip": "79.137.73.28",
          "cf-ipcountry": "FR",
          "cf-ray": "98cf6d85eddbf0fc-CDG",
          "cf-visitor": "{\"scheme\":\"https\"}",
          "cf-warp-tag-id": "b63cb691-0a02-4fb4-bc8c-471e3dad31c2",
          "connection": "keep-alive",
          "x-forwarded-for": "79.137.73.28",
          "x-forwarded-proto": "https"
        },
        "params": {},
        "query": {
          "sheet_id": "1rQf6qbxHhqKxib_lbJf0TYaQ8AORC_XKMUxr8feXNQQ"
        },
        "body": {},
        "webhookUrl": "https://n8n.hamzashamaseen.dpdns.org/webhook/e99a90c4-0696-46da-b729-92596d37a6c2",
        "executionMode": "production"
      }
    ],
    "Webhook - Search Candidates": [
      {
        "headers": {
          "host": "n8n.hamzashamaseen.dpdns.org",
          "user-agent": "axios/1.12.0",
          "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
          "accept-encoding": "gzip, br",
          "cdn-loop": "cloudflare; loops=1",
          "cf-connecting-ip": "79.137.73.28",
          "cf-ipcountry": "FR",
          "cf-ray": "98d7b8780be4c72b-CDG",
          "cf-visitor": "{\"scheme\":\"https\"}",
          "cf-warp-tag-id": "b63cb691-0a02-4fb4-bc8c-471e3dad31c2",
          "connection": "keep-alive",
          "x-forwarded-for": "79.137.73.28",
          "x-forwarded-proto": "https"
        },
        "params": {},
        "query": {
          "sheet_id": "18WJ90M1RFqnf0wv9W7WII4XDIfozJKW8KSXjyRAcJQc",
          "Job position": "AI engineer"
        },
        "webhookUrl": "https://n8n.hamzashamaseen.dpdns.org/webhook/search-candidates",
        "executionMode": "production"
      }
    ],
    "Webhook": [
      {
        "headers": {
          "host": "n8n.hamzashamaseen.dpdns.org",
          "user-agent": "axios/1.12.0",
          "content-length": "44",
          "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
          "accept-encoding": "gzip, br",
          "cdn-loop": "cloudflare; loops=1",
          "cf-connecting-ip": "79.137.73.28",
          "cf-ipcountry": "FR",
          "cf-ray": "98cf17644f7997ce-BRU",
          "cf-visitor": "{\"scheme\":\"https\"}",
          "cf-warp-tag-id": "b63cb691-0a02-4fb4-bc8c-471e3dad31c2",
          "connection": "keep-alive",
          "content-type": "application/json",
          "x-forwarded-for": "79.137.73.28",
          "x-forwarded-proto": "https"
        },
        "params": {},
        "query": {},
        "body": {
          "sheet_name": "962776241974@s.whatsapp.net"
        },
        "webhookUrl": "https://n8n.hamzashamaseen.dpdns.org/webhook/98f286ad-9135-4b1d-9147-d23942408d15",
        "executionMode": "production"
      }
    ]
  },
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "eec1566fcd8323fe2827bc00200f403cce37cac2caa714ef5dfd057298c08dd8"
  }
}
